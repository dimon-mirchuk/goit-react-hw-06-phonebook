{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","Redux/contacts/contacts-actions.js","Redux/contacts/contacts-types.js","Redux/contacts/contacts-reducer.js","Redux/store.js","components/ContactAddForm/ContactAddForm.js","components/ContactListItem/ContactListItem.js","Redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","components/App.js","index.js","components/ContactAddForm/ContactAddForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","state","find","alert","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blscklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","form","styles","label","input","button","ContactAddForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","resetForm","onSubmit","preventDefault","className","type","pattern","title","required","onChange","placeholder","text","span","ContactListItem","onDelete","onClick","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","item","list","ContactList","visibleContacts","useSelector","map","Filter","length","event","Container","children","container","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.94f48c61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__3gn9w\",\"span\":\"ContactListItem_span__2Sltr\",\"button\":\"ContactListItem_button__KRgeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3gAh4\",\"item\":\"ContactList_item__1Sh6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2ajcD\",\"input\":\"Filter_input__3c9q3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1GmL6\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"./contacts-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: { id: uuidv4(), name, number },\n}));\n\nexport const deleteContact = createAction(DELETE_CONTACT);\n\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const ADD_CONTACT = \"contacts/add\";\nexport const DELETE_CONTACT = \"contacts/delete\";\nexport const FILTER_CONTACT = \"contacts/filter\";\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { addContact, deleteContact, filterContact } from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${payload.name} is already in contacts`)\n      : [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blscklist: \"filter\",\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../Redux/contacts/contacts-actions\";\nimport styles from \"./ContactAddForm.module.css\";\n\nconst { form, label, input, button } = styles;\n\nfunction ContactAddForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={form}>\n      <label className={label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n          className={input}\n        />\n      </label>\n      <label className={label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"+7 (999) 999-99-99\"\n          className={input}\n        />\n      </label>\n      <button type=\"submit\" className={button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactAddForm;\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst { text, span, button } = styles;\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p className={text}>\r\n        {name}: <span className={span}>{number}</span>\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        title=\"Delete\"\r\n        className={button}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../Redux/contacts/contacts-actions\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem\";\nimport { getVisibleContacts } from \"../../Redux/contacts/contacts-selectors\";\nimport styles from \"./ContactList.module.css\";\n\nconst { item, list } = styles;\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const onDelete = (id) => dispatch(deleteContact(id));\n\n  return (\n    <ul className={list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={item} key={id}>\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            onDelete={onDelete}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../Redux/contacts/contacts-actions\";\nimport {\n  getFilter,\n  getContacts,\n} from \"../../Redux/contacts/contacts-selectors\";\nimport styles from \"./Filter.module.css\";\n\nconst { label, input } = styles;\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  if (!contacts.length)\n    return <p>Your phonebook is empty. Please add contact.</p>;\n  return (\n    <label className={label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(event) => dispatch(filterContact(event.target.value))}\n        required\n        className={input}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","// import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ContactAddForm from \"./ContactAddForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\nimport Container from \"./Container\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  // });\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const handleAddContact = (name, number) => {\n  //   const contact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n\n  //   if (\n  //     contacts.find(\n  //       (contact) => contact.name.toLowerCase() === name.toLowerCase()\n  //     )\n  //   ) {\n  //     alert(`${name} is already in contacts.`);\n  //   } else {\n  //     setContacts((contacts) => [...contacts, contact]);\n  //   }\n  // };\n\n  // const handleDeleteContact = (id) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== id));\n  // };\n\n  // const changeFilter = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactAddForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./Redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddForm_form__1344J\",\"label\":\"ContactAddForm_label__3ljMn\",\"input\":\"ContactAddForm_input__2EcZm\",\"button\":\"ContactAddForm_button__3fDWh\"};"],"sourceRoot":""}